Index: VVVVVV/desktop_version/CMakeLists.txt
--- VVVVVV/desktop_version/CMakeLists.txt.orig
+++ VVVVVV/desktop_version/CMakeLists.txt
@@ -23,6 +23,7 @@ endif()
 
 option(REMOVE_ABSOLUTE_PATHS "If supported by the compiler, replace all absolute paths to source directories compiled into the binary (if any) with relative paths" ON)
 
+link_directories(/usr/local/lib)
 
 # Architecture Flags
 if(APPLE)
@@ -36,7 +37,6 @@ if(APPLE)
         endif()
     endif()
     set(CMAKE_OSX_DEPLOYMENT_TARGET 10.9)
-    link_directories(/usr/local/lib)
     add_compile_options(-Werror=partial-availability)
 endif()
 
@@ -117,7 +117,6 @@ set(VVV_SRC
     src/VFormat.c
     src/Vlogging.c
     src/Xoshiro.c
-    ../third_party/physfs/extras/physfsrwops.c
 )
 if(STEAM)
     list(APPEND VVV_SRC src/SteamNetwork.c)
@@ -204,40 +203,6 @@ endif()
 set(PNG_SRC src/lodepng_wrapper.c)
 set(CHM_SRC ../third_party/c-hashmap/map.c)
 set(SBIDI_SRC ../third_party/SheenBidi/Source/SheenBidi.c)
-
-if(NOT OFFICIAL_BUILD)
-    # Add interim commit hash and its date to the build
-
-    # find_package sets GIT_FOUND and GIT_EXECUTABLE
-    find_package(Git)
-
-    if(GIT_FOUND)
-        # These filenames have to be qualified, because when we run
-        # the CMake script, its work dir gets set to the build folder
-        set(VERSION_INPUT_FILE ${CMAKE_CURRENT_SOURCE_DIR}/src/InterimVersion.in.c)
-        set(VERSION_OUTPUT_FILE ${CMAKE_CURRENT_SOURCE_DIR}/src/InterimVersion.out.c)
-
-        add_custom_target(
-            GenerateVersion ALL
-            # This BYPRODUCTS line is required for this to be ran every time
-            BYPRODUCTS ${VERSION_OUTPUT_FILE}
-            COMMAND ${CMAKE_COMMAND}
-            # These args have to be passed through, otherwise the script can't see them
-            # Also, these args have to come BEFORE `-P`! (Otherwise it fails with an unclear error)
-            -DGIT_EXECUTABLE=${GIT_EXECUTABLE}
-            -DINPUT_FILE=${VERSION_INPUT_FILE}
-            -DOUTPUT_FILE=${VERSION_OUTPUT_FILE}
-            -P ${CMAKE_CURRENT_SOURCE_DIR}/version.cmake
-        )
-
-        add_dependencies(VVVVVV GenerateVersion)
-
-        target_compile_definitions(VVVVVV PRIVATE -DINTERIM_VERSION_EXISTS)
-
-        add_library(InterimVersion STATIC src/InterimVersion.out.c)
-        list(APPEND STATIC_LIBRARIES InterimVersion)
-    endif()
-endif()
 
 # Build options
 if(ENABLE_WARNINGS)
